const version = 'v2.0';

// L·∫•y headers t·ª´ request
let modifiedHeaders = $request?.headers || {};

// Chuy·ªÉn to√†n b·ªô key v·ªÅ lowercase ƒë·ªÉ x·ª≠ l√Ω d·ªÖ h∆°n
let normalizedHeaders = {};
for (let key in modifiedHeaders) {
  normalizedHeaders[key.toLowerCase()] = modifiedHeaders[key];
}

// Danh s√°ch header c·∫ßn x√≥a ho·∫∑c ch·ªânh s·ª≠a
const headersToModify = {
  "x-revenuecat-etag": null,   // null = x√≥a h·∫≥n header
  "if-none-match": null,
  "cache-control": "no-cache",
  "pragma": "no-cache"
};

// √Åp d·ª•ng thay ƒë·ªïi
for (let key in headersToModify) {
  if (headersToModify[key] === null) {
    delete normalizedHeaders[key]; // X√≥a h·∫≥n header
  } else {
    normalizedHeaders[key] = headersToModify[key]; // G√°n gi√° tr·ªã m·ªõi
  }
}

// Tr·∫£ l·∫°i headers v·ªõi key g·ªëc nh∆∞ c≈©
console.log("üõ† Modified Headers:", JSON.stringify(normalizedHeaders, null, 2));
$done({ headers: normalizedHeaders });
